head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <-data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"'),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-anddept',
USER='franny', PASS='twinty10', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <-data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:cannata:test-emp-anddept',
USER='franny', PASS='twinty10', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
source('~/.active-rstudio-document')
install.packages("RCurl")
install.packages("jsonlite")
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <-data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:Net-Income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <-data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:Net-Income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:Net Income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'),
verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
install.packages("dplyr")
install.packages("extrafont")
install.packages("ggplot2")
install.packages("ggthemes")
install.packages("gplots")
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:
5000/rest/native/?query="select * from
emp"
'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
install.packages("lubridate")
install.packages("reshape2")
install.packages("tableplot")
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from
emp"'),
httpheader=c(DB='jdbc:data:world:sql:franny:net-income',USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from
emp"'),
httpheader=c(DB='jdbc:data:world:sql:franny:net-income',USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
source('~/.active-rstudio-document')
df
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <-data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from
emp"'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income',
USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode',
MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your credentials. Get your password from Edit profile -> Settings -> Advanced -> Copy API Token to clipboard
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp "'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income', USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
df <- data.frame(fromJSON(getURL(URLencode('oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from emp "'),httpheader=c(DB='jdbc:data:world:sql:franny:net-income', USER='franny', PASS='eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpc3MiOiJhZ2VudDpmcmFubnk6OmZiZWUzMGFiLWQ4NmQtNDdlNS05YWQzLTllYzQ3NDU2NWJjZiIsImlhdCI6MTQ4NDY5NzMxNCwic3ViIjoicHJvZC11c2VyLWNsaWVudDpmcmFubnkiLCJyb2xlIjpbInVzZXJfYXBpX3dyaXRlIiwidXNlcl9hcGlfcmVhZCJdLCJnZW5lcmFsLXB1cnBvc2UiOnRydWV9.xlNtEcKeMzzdzLq6sPgjHeC-kEsDjRKGJiab3u7OWPpx1P0LKzhOPK_XhrHBjh01dthOL0tTLpKRd6V-LPWGoA', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
site_path = R.home(component = "home")
fname = file.path(site_path, "etc", "Rprofile.site")
file.exists(fname)
file.exists("~/.Rprofile")
if(!file.exists("~/.Rprofile")) # only create if not already there
file.create("~/.Rprofile")    # (don't overwrite it)
file.edit("~/.Rprofile")
file.exists("~/.Rprofile")
site_path = R.home(component = "home")
site_path
source('~/DV_Project2/01 Data/Access Dataworld dv2.R')
View(df)
X13.1_AdultHeadBOdyLen_mm
X5.1_AdultForearmLen_mm
X5.1_AdultBodyMass_g
p1 = dplyr::filter(df, X13.1_AdultHeadBOdyLen_mm != -999, X5.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBOdyLen_mm, y=X5.1_AdultForearmLen_mm, color = MSW05_Order))
print (p1)
p1 = dplyr::filter(df, X13.1_AdultHeadBOdyLen_mm != -999, X5.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBOdyLen_mm, y=X5.1_AdultForearmLen_mm, color = MSW05_Order))
p1 = dplyr::filter(df, X13.1_AdultHeadBodyLen_mm != -999, X5.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBOdyLen_mm, y=X5.1_AdultForearmLen_mm, color = MSW05_Order))
print (p1)
p1 = dplyr::filter(df, X13.1_AdultHeadBodyLen_mm != -999, X5.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBOdyLen_mm, y=X5.1_AdultForearmLen_mm, color = MSW05_Order))
p1 = dplyr::filter(df, X13.1_AdultHeadBodyLen_mm != -999, X8.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBOdyLen_mm, y=X8.1_AdultForearmLen_mm, color = MSW05_Order))
print (p1)
p1 = dplyr::filter(df, X13.1_AdultHeadBodyLen_mm != -999, X8.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBodyLen_mm, y=X8.1_AdultForearmLen_mm, color = MSW05_Order))
print (p1)
p1 = dplyr::filter(df, X13.1_AdultHeadBodyLen_mm != -999, X8.1_AdultForearmLen_mm != -999) %>%
ggplot() + geom_point(aes(x=X13.1_AdultHeadBodyLen_mm, y=X8.1_AdultForearmLen_mm, color = MSW05_Order)) +
scale_color_discrete (guide=guide_legend(title = "Order")) +
labs(x="Adult Head Body Length (mm)", y="Adult Forearm Length (mm)", size=20)
print (p1)
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
print(p1, vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
print(p2, vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
print(p3, vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
print(p4, vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
setwd("~/DV_Project2/00 Doc")
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
source('~/DV_Project2/03 Visualizations/dv project2 plots.R')
